#include <stdio.h>
#include "platform.h"
#include "xparameters.h"
#include "xilisf.h"
#include "xgpio.h"

void print(char *str);

void sleep(int ticks) {
	int i = 0;
	for (i = 0; i < ticks; i++)
		;
}

static XGpio gpio;
//static XIsf Isf;
//static XSpi Spi;

int main() {
	init_platform();
	XGpio_Initialize(&gpio, XPAR_AXI_GPIO_0_BASEADDR);

	uint64_t data[] = { 0x01000000C0, 0x00000000FE, 0x10000000E0, 0x1C000000E0,
			0x01000000C1, 0x1F000000E0, 0xFF00000000 };
	uint8_t len = 7, i = 0;
/*
	for (i = 0; i < len; i++) {
		XGpio_DiscreteWrite(&gpio, 1, 0);
		XGpio_DiscreteWrite(&gpio, 2, 0);
		sleep(100000);
		XGpio_DiscreteWrite(&gpio, 1, (uint32_t) data[i] & 0xFFFFFFFF);
		XGpio_DiscreteWrite(&gpio, 2, ((i & 0x3F) << 8) | ((data[i] >> 32) & 0xFF));
		sleep(100000);
		XGpio_DiscreteSet(&gpio, 2, 0x4000);
		sleep(200000);
		XGpio_DiscreteClear(&gpio, 2, 0x4000);
		sleep(100000);
	}
*/
190	XGpio_DiscreteSet(&gpio, 2, 0x8000);
	print("Programming complete!");
	while (1) {

	}

	cleanup_platform();
	return 0;
}
